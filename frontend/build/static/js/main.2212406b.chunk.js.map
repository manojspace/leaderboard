{"version":3,"sources":["search.js","GameRow.js","App.js","index.js"],"names":["SearchData","typingTimer","state","searchText","filterText","event","value","target","setState","clearTimeout","setTimeout","props","searchGames","input","this","className","TextField","fullWidth","label","variant","size","placeholder","type","onChange","React","Component","GameRow","item","updateGame","useState","game","setGame","isEdit","setEdit","useEffect","handleChange","name","enableEdit","TableRow","hover","TableCell","title","onClick","Rank","Name","Platform","Year","Genre","Publisher","Global_Sales","align","Button","color","IconButton","Edit","fontSize","columns","Games","games","loading","page","total","sort","sortBy","getGames","data","api","axios","get","then","res","success","rows","count","handlePageChange","newPage","post","handleSort","pages","parseInt","LinearProgress","Table","TableHead","length","map","column","index","ArrowDropDown","ArrowDropUp","TableBody","Pagination","shape","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.2212406b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField} from '@material-ui/core';\r\n\r\nexport default class SearchData extends React.Component {\r\n\ttypingTimer = null;\r\n\tstate = {\r\n\t\tsearchText: ''\r\n\t}\r\n\r\n\tfilterText = (event) => {\r\n\t\tlet value = event.target.value\r\n\t\tthis.setState({searchText: value});\r\n\r\n\t\tclearTimeout(this.typingTimer);\r\n\t\tthis.typingTimer = setTimeout(() => {\r\n\t\t\tthis.props.searchGames({input: value});\r\n\t\t}, 800);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {searchText} = this.state;\r\n\t\treturn(\r\n\t\t\t<div className=\"search\">\r\n\t\t\t\t<TextField \r\n\t\t\t\tfullWidth\r\n\t\t\t\tlabel=\"Search\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tplaceholder=\"Search by year, rank, publisher, name\" type=\"text\" value={searchText} onChange={this.filterText}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n} ","import React, {useState, useEffect} from 'react';\r\nimport {TextField, Button, TableRow, TableCell, IconButton} from '@material-ui/core';\r\nimport {Edit} from '@material-ui/icons';\r\n\r\nfunction GameRow({item, updateGame}) {\r\n\tconst [game, setGame] = useState(item);\r\n\tconst [isEdit, setEdit] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetGame(item);\r\n\t}, [item]);\r\n\r\n\tconst handleChange = (value, name) => {\r\n\t\tsetGame({...game, [name]: value});\r\n\t}\r\n\r\n\tconst saveItem = () => {\r\n\t\tupdateGame(game);\r\n\t\tsetEdit(false);\r\n\t}\r\n\r\n\tconst enableEdit = () => {\r\n\t\tsetEdit(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TableRow hover>\r\n\t\t\t<TableCell title=\"click to edit\" onClick={isEdit?null:enableEdit}>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Rank} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Rank')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Rank\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Name} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Name')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Name\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Platform} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Platform')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Platform\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell title=\"click to edit\" onClick={isEdit?null:enableEdit}>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Year} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Year')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Year\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Genre} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Genre')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Genre\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Publisher} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Publisher')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Publisher\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell>\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<TextField value={game.Global_Sales} size=\"small\" onChange={(event) => {handleChange(event.target.value, 'Global_Sales')}} />\r\n\t\t\t\t:\r\n\t\t\t\tgame.Global_Sales\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t\t<TableCell align=\"right\">\r\n\t\t\t{\r\n\t\t\t\tisEdit ?\r\n\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={saveItem} variant=\"contained\">Save</Button>\r\n\t\t\t\t:\r\n\t\t\t\t<IconButton size=\"small\" color=\"primary\" onClick={enableEdit} variant=\"contained\"><Edit fontSize=\"small\" /></IconButton>\r\n\t\t\t}\r\n\t\t\t</TableCell>\r\n\t\t</TableRow>\r\n\t\t)\r\n}\r\n\r\nexport default GameRow;","import React, {Fragment} from 'react';\r\nimport {Table, TableHead, TableRow, TableCell, TableBody, LinearProgress} from '@material-ui/core';\r\nimport {ArrowDropDown, ArrowDropUp} from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Search from './search';\r\nimport GameRow from './GameRow';\r\nimport './style.css';\r\n\r\nconst columns = [\"Rank\", \"Name\", \"Platform\", \"Year\", \"Genre\", \"Publisher\", \"Global_Sales\"];\r\n\r\nclass Games extends React.Component {\r\n\tstate = {\r\n\t\tgames: [],\r\n\t\tloading: true,\r\n\t\tpage: 1,\r\n\t\ttotal: 0,\r\n\t\tsort: 'Rank',\r\n\t\tsortBy: 'ASC'\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.getGames({input: '', page: 1});\r\n\t}\r\n\r\n\tgetGames = (data) => {\r\n\t\t//const {input, page} = data;\r\n\t\tconst {sort, sortBy, input, page} = this.state;\r\n\t\tlet api = \"/api/games?page=\"+page+\"&sort=\"+sort+\"&sortBy=\"+sortBy+\"&q=\"+(input?input:\"\");\r\n\t\taxios.get(api).then(res => {\r\n\t\t\tconst {data} = res;\r\n\t\t\tif (data && data.success) {\r\n\t\t\t\tthis.setState({games: data.data.rows, total: data.data.count, loading: false});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\thandlePageChange = (event, newPage) => {\r\n\t\tthis.setState({page: newPage, loading: true}, () => {\r\n\t\t\tthis.getGames({page: newPage, input: this.state.input?this.state.input:\"\"});\r\n\t\t});\r\n\t}\r\n\r\n\tupdateGame = (data) => {\r\n\t\taxios.post(\"/api/game/update\", data).then(res => {\r\n\t\t\tconst {data} = res;\r\n\t\t\tif (data && data.success) {\r\n\t\t\t\tconst {page, input} = this.state;\r\n\t\t\t\tthis.getGames({page: page, input: input});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\thandleSort = (type) => {\r\n\t\tconst {sortBy, input, page} = this.state;\r\n\t\tthis.setState({sort: type, sortBy: sortBy==='ASC'?'DESC':'ASC', loading: true});\r\n\t\tthis.getGames();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {loading, games, total, sort, sortBy} = this.state;\r\n\t\tvar pages = parseInt(total/9);\r\n\t\tvar remaining = total%9;\r\n\t\tif (remaining > 0) {\r\n\t\t\tpages = pages+1;\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Search searchGames={this.getGames} />\r\n\t\t\t\t{\r\n\t\t\t\t\tloading &&\r\n\t\t\t\t\t<LinearProgress color=\"secondary\" />\r\n\t\t\t\t}\r\n\t\t\t\t<Table aria-label=\"simple table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolumns && columns.length && \r\n\t\t\t\t\t\t\tcolumns.map((column, index) => {\r\n\t\t\t\t\t\t\t\treturn <TableCell key={index} onClick={() => {this.handleSort(column)}}>\r\n\t\t\t\t\t\t\t\t{column}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tsort === column && \r\n\t\t\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tsortBy === 'DESC' ?\r\n\t\t\t\t\t\t\t\t\t\t<ArrowDropDown />\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<ArrowDropUp />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<TableCell align=\"right\">Action</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgames && games.length && \r\n\t\t\t\t\t\tgames.map((game, index) => {\r\n\t\t\t\t\t\t\treturn <GameRow item={game} key={index} updateGame={this.updateGame} />\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Pagination  onChange={this.handlePageChange} className=\"pagination\" count={pages} variant=\"outlined\" shape=\"rounded\" />\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Games;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}